---
import { getCollection } from "astro:content";
import PageLayout from "@/layouts/Base";
import PostPreview from "@/components/blog/PostPreview";
import SocialList from "@/components/SocialList";
import { sortMDByDate } from "@/utils";
// import BgColorChanger from "@/components/BgColorChanger";

const MAX_POSTS = 10;
const allPosts = await getCollection("post");
const allPostsByDate = sortMDByDate(allPosts).slice(0, MAX_POSTS);

const cactusTech: Array<{ title: string; desc: string; href: string }> = [
  {
    title: "Astro",
    desc: "Build fast websites, faster.",
    href: "https://astro.build",
  },
  {
    title: "Cactus template",
    desc: "A simple Astro theme. Use it to create your blog or website.",
    href: "https://github.com/chrismwilliams/astro-theme-cactus",
  },
  {
    title: "Tailwind",
    desc: "Rapidly build modern websites without ever leaving your HTML.",
    href: "https://tailwindcss.com/",
  },
  {
    title: "Vercel",
    desc: "Develop, preview, ship.",
    href: "https://vercel.com/home",
  },
];
---

<PageLayout meta={{ title: "Home" }}>
  <section class="border border-slate-300">
    <div class="py-4 cover-bg">
      <h1
        class="bg-bgColor flex flex-col md:flex-row gap-4 title mb-6 font-black tracking-tight items-center justify-center"
      >
        <span class="flex-1 text-right py-4 md:py-6">Es hora de</span><span
          id="titles"
          class="titles bg-titles flex-1 py-4 md:py-6"></span>
      </h1>
      <div class="h-[5vh]"></div>
    </div>
    <!-- <BgColorChanger /> -->
    <div
      class="grid md:grid-cols-2 bg-bgColor border-separate divide-y md:divide-y-0 md:divide-x-[1px]"
    >
      <p class="mb-4 text-base p-4 font-medium">
        Blog para y por devs. Un blog sobre desarrollo de software, o sea, un
        rinconcito en la web donde puedo liberar mis pensamientos y
        experiencias.
      </p>
      <SocialList />
    </div>
  </section>
  <section aria-label="Blog post list" class="my-4">
    <h2
      class="text-gray-700 dark:text-gray-200 items-end mb-2 text-xl font-bold md:text-2xl text-center border border-slate-300 py-16 px-4"
    >
      <strong>Todo</strong> lo que aprendo
      <svg
        width="24px"
        height="24px"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        color="currentColor"
        class="inline"
        ><path
          d="M6.81818 22L6.81822 19.143C6.51904 16.1656 3.00001 14.5717 3.00001 10.0004C3 5.42914 5.72738 1.94374 11.1819 2.00069C15.1094 2.04169 18.8182 4.28632 18.8182 8.8576L21 12.286C21 14.5717 18.8182 14.5717 18.8182 14.5717C18.8182 14.5717 19.3636 20.2858 14.4545 20.2858L14.4545 22"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path><path
          d="M11 12C12.1046 12 13 11.1046 13 10C13 8.89543 12.1046 8 11 8C10.6357 8 10.2942 8.09739 10 8.26756C9.4022 8.61337 9 9.25972 9 10C9 10.7403 9.4022 11.3866 10 11.7324C10.2942 11.9026 10.6357 12 11 12Z"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path><path
          d="M11 13C12.6569 13 14 11.6569 14 10C14 8.34315 12.6569 7 11 7C9.34315 7 8 8.34315 8 10C8 11.6569 9.34315 13 11 13Z"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-dasharray="0.3 2"></path></svg
      >
      , <strong>Todo</strong> lo que practico
      <svg
        width="24px"
        height="24px"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        color="currentColor"
        class="inline"
      >
        <path
          d="M7.4 7H4.6C4.26863 7 4 7.26863 4 7.6V16.4C4 16.7314 4.26863 17 4.6 17H7.4C7.73137 17 8 16.7314 8 16.4V7.6C8 7.26863 7.73137 7 7.4 7Z"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
        </path>
        <path
          d="M19.4 7H16.6C16.2686 7 16 7.26863 16 7.6V16.4C16 16.7314 16.2686 17 16.6 17H19.4C19.7314 17 20 16.7314 20 16.4V7.6C20 7.26863 19.7314 7 19.4 7Z"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M1 14.4V9.6C1 9.26863 1.26863 9 1.6 9H3.4C3.73137 9 4 9.26863 4 9.6V14.4C4 14.7314 3.73137 15 3.4 15H1.6C1.26863 15 1 14.7314 1 14.4Z"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M23 14.4V9.6C23 9.26863 22.7314 9 22.4 9H20.6C20.2686 9 20 9.26863 20 9.6V14.4C20 14.7314 20.2686 15 20.6 15H22.4C22.7314 15 23 14.7314 23 14.4Z"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M8 12H16"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
      ,
      <strong>Todos</strong> mis errores
      <svg
        width="24px"
        height="24px"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        color="currentColor"
        class="inline"
        ><path
          d="M3 17V7C3 5.89543 3.89543 5 5 5H19C20.1046 5 21 5.89543 21 7V17C21 18.1046 20.1046 19 19 19H5C3.89543 19 3 18.1046 3 17Z"
          stroke="currentColor"
          stroke-width="1.5"></path><path
          d="M10 14.2426L12.1213 12.1213M12.1213 12.1213L14.2426 10M12.1213 12.1213L10 10M12.1213 12.1213L14.2426 14.2426"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path><path
          d="M6 8H7"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path></svg
      >
      , <strong>Todo</strong> mi codigo
      <svg
        width="24px"
        height="24px"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        color="currentColor"
        class="inline"
        ><path
          d="M13.5 6L10 18.5"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path><path
          d="M6.5 8.5L3 12L6.5 15.5"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path><path
          d="M17.5 8.5L21 12L17.5 15.5"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path></svg
      >, <strong>Todo</strong> sobre programacion en este blog.
    </h2>
    <ul class="grid gap-2 md:grid-cols-2">
      {
        allPostsByDate.map((p) => (
          <li class="flex flex-col  border border-slate-300 p-2 transition-all">
            <PostPreview post={p} withDesc />
          </li>
        ))
      }
    </ul>
  </section>
  <section class="mt-16">
    <h2 class="mb-4 text-xl font-extrabold md:text-2xl">Tecnolog√≠as:</h2>
    <ul class="space-y-4 sm:space-y-2">
      {
        cactusTech.map(({ href, title, desc }) => (
          <li>
            <a
              href={href}
              target="_blank"
              rel="noopener noreferrer"
              class="cactus-link inline-block"
            >
              {title}
            </a>
            :<p class="inline-block sm:mt-2">{desc}</p>
          </li>
        ))
      }
    </ul>
  </section>
</PageLayout>

<style>
  .title {
    font-size: clamp(3.5rem, 3.5vw, 5rem);
  }

  #titles {
    opacity: 1;
    transition: all 200ms;
  }

  #titles.fade {
    opacity: 0;
  }

  .bg-titles {
    background: -webkit-linear-gradient(
      35deg,
      var(--theme-text),
      var(--theme-bg) 90%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .cover-bg {
    --pattern-color-1: hsla(261, 100%, 70%, 0.9);
    --pattern-color-2: hsla(237, 76%, 74%, 0.5);
    position: relative;
    isolation: isolate;
    background: linear-gradient(-45deg, #fe7c54, #ef2170, #0db4f1, #23d55b);
    background-size: 400% 400%;
    /* background-size: 20px 35px; */
    /* height: 100vh; */
    animation: bg-color-rotation infinite 6000ms linear;
  }

  .cover-bg:after {
    z-index: -1;
    content: "";
    position: absolute;
    inset: 0;
    background-color: #e5e5f7;
    opacity: 0.8;
    background-image: linear-gradient(
        30deg,
        var(--pattern-color-1) 12%,
        transparent 12.5%,
        transparent 87%,
        var(--pattern-color-1) 87.5%,
        var(--pattern-color-1)
      ),
      linear-gradient(
        150deg,
        var(--pattern-color-1) 12%,
        transparent 12.5%,
        transparent 87%,
        var(--pattern-color-1) 87.5%,
        var(--pattern-color-1)
      ),
      linear-gradient(
        30deg,
        var(--pattern-color-1) 12%,
        transparent 12.5%,
        transparent 87%,
        var(--pattern-color-1) 87.5%,
        var(--pattern-color-1)
      ),
      linear-gradient(
        150deg,
        var(--pattern-color-1) 12%,
        transparent 12.5%,
        transparent 87%,
        var(--pattern-color-1) 87.5%,
        var(--pattern-color-1)
      ),
      linear-gradient(
        60deg,
        var(--pattern-color-2) 25%,
        transparent 25.5%,
        transparent 75%,
        var(--pattern-color-2) 75%,
        var(--pattern-color-2)
      ),
      linear-gradient(
        60deg,
        var(--pattern-color-2) 25%,
        transparent 25.5%,
        transparent 75%,
        var(--pattern-color-2) 75%,
        var(--pattern-color-2)
      );
    background-size: 20px 35px;
    background-position: 0 0, 0 0, 10px 18px, 10px 18px, 0 0, 10px 18px;
    transition: all 5000ms linear;
  }

  @keyframes bg-color-rotation {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
</style>

<script lang="js">
  const titleContainer = document.getElementById("titles");

  const titles = [
    "Experimentar",
    "Programar",
    "Crear",
    "Inventar",
    "Imaginar",
    "Desarrollar",
    "Guiar",
  ];

  let i = 0;

  const WORD_DURATION_ON_SCREEN = 5000;

  function changeTitle() {
    // Add the fade class to start the transition
    titleContainer.classList.add("fade");

    // After the transition ends, change the word and remove the fade class
    setTimeout(() => {
      // console.log(titles[i]);
      titleContainer.innerText = titles[i];
      titleContainer.classList.remove("fade");
      i = (i + 1) % titles.length; // Use modulo to ensure i stays within bounds
    }, getTransitionDuration());

    // Remove the 'show' class after the word has been visible for some time
    setTimeout(() => {
      titleContainer.classList.remove("show");
    }, WORD_DURATION_ON_SCREEN); // Adjust this to change how long each word stays visible
  }

  function getTransitionDuration() {
    const styles = window.getComputedStyle(titleContainer);
    return parseFloat(styles.transitionDuration) * 1000;
  }

  let intervalId;

  function startTitleChange() {
    changeTitle();

    intervalId = setInterval(
      changeTitle,
      getTransitionDuration() + WORD_DURATION_ON_SCREEN
    ); // This should be the sum of the above two timeouts
  }

  function stopTitleChange() {
    clearInterval(intervalId);
  }

  window.addEventListener("beforeunload", stopTitleChange);

  startTitleChange();
</script>
